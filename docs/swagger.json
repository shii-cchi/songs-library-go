{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/songs": {
            "get": {
                "description": "Retrieve a paginated list of songs based on various filters like group, song, release date, text, and link.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get list of songs",
                "parameters": [
                    {
                        "description": "Filters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SongParamsDto"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of songs per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of songs",
                        "schema": {
                            "$ref": "#/definitions/dto.SongsDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new song to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Create a new song",
                "parameters": [
                    {
                        "description": "Song details to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSongDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created song",
                        "schema": {
                            "$ref": "#/definitions/dto.SongDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    }
                }
            }
        },
        "/songs/{songID}": {
            "get": {
                "description": "Retrieve the verses of a song based on its ID with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get song text by song ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "songID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of verses per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of song verses",
                        "schema": {
                            "$ref": "#/definitions/dto.VersesDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing song based on its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Update a song by song ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "songID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Song details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SongParamsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated song",
                        "schema": {
                            "$ref": "#/definitions/dto.SongDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a song from the database based on its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Delete a song by song ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "songID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song successfully deleted"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/delivery.JSONError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.JSONError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid input"
                },
                "message": {
                    "type": "string",
                    "example": "invalid JSON body"
                }
            }
        },
        "dto.CreateSongDto": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Rammstein"
                },
                "song": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Weit Weg"
                }
            }
        },
        "dto.SongDto": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Rammstein"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/watch?v=N9AalJuwLyQ\u0026ab_channel=Rammstein-Topic"
                },
                "release_date": {
                    "type": "string",
                    "example": "17.05.2019"
                },
                "song": {
                    "type": "string",
                    "example": "Weit Weg"
                },
                "text": {
                    "type": "string",
                    "example": "Niemand kann das Bild beschreiben\nGegen seine Fensterscheibe\nHat er das Gesicht gepresst\nUnd hofft, dass sie das Licht anlässt\nOhne Kleid sah er sie nie\nDie Herrin seiner Fantasie\nEr nimmt die Gläser vom Gesicht\nSingt zitternd eine Melodie\n\nDer Raum wird sich mit Mondlicht füllen\nLässt sie fallen, alle Hüllen\n\n"
                }
            }
        },
        "dto.SongParamsDto": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Rammstein"
                },
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/watch?v=N9AalJuwLyQ\u0026ab_channel=Rammstein-Topic"
                },
                "release_date": {
                    "type": "string",
                    "example": "17.05.2019"
                },
                "song": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Weit Weg"
                },
                "text": {
                    "type": "string",
                    "maxLength": 10000,
                    "minLength": 1,
                    "example": "Niemand kann das Bild beschreiben\nGegen seine Fensterscheibe\nHat er das Gesicht gepresst\nUnd hofft, dass sie das Licht anlässt\nOhne Kleid sah er sie nie\nDie Herrin seiner Fantasie\nEr nimmt die Gläser vom Gesicht\nSingt zitternd eine Melodie\n\nDer Raum wird sich mit Mondlicht füllen\nLässt sie fallen, alle Hüllen\n\n"
                }
            }
        },
        "dto.SongsDto": {
            "type": "object",
            "properties": {
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SongDto"
                    }
                },
                "total_pages": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.VersesDto": {
            "type": "object",
            "properties": {
                "total_pages": {
                    "type": "integer",
                    "example": 1
                },
                "verses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Niemand kann das Bild beschreiben\\nGegen seine Fensterscheibe\\nHat er das Gesicht gepresst\\nUnd hofft",
                        " dass sie das Licht anlässt\\nOhne Kleid sah er sie nie\\nDie Herrin seiner Fantasie\\nEr nimmt die Gläser vom Gesicht\\nSingt zitternd eine Melodie\"",
                        " \"Der Raum wird sich mit Mondlicht füllen\\nLässt sie fallen",
                        " alle Hüllen\"]"
                    ]
                }
            }
        }
    }
}